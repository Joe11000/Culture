# change colors after commit clock ran out
export PS1='\[\033[01;31m\]\u@\h\[\033[01;31m\] \W$(__git_ps1 " (%s)") \$\[\031[00m\] ' &&
echo -e "\033]50;SetProfile=Kevin\a" && say "Commit"  &&  /*change to kevin profile */
clear



# change color back to certain color....haven't saved their settings before chaning
export PS1='\[\033[01;33m\]\u@\h\[\033[01;31m\] \W$(__git_ps1 " (%s)") \$\[\033[00m\] ' &&
echo -e "\033]50;SetProfile=Default\a" && say "15 minutes till next commit" # change to default profile && clear





# Bash Profile work..... Watch isn't working

overtime()
{
      export PS1='\[\033[01;31m\]\u@\h\[\033[01;31m\] \W$(__git_ps1 " (%s)") \$\[\031[00m\] '
      echo -e "\033]50;SetProfile=Kevin;SetBackground-Image='/Users/apprentice/Dropbox/DBC-Chicago/Grasshoppers/JNoonan/Pictures/gorilla-funny.jpg'\a" 
      clear
      say "Commit" &  
}

regular()
{
      # change color back to certain color....haven't saved their settings before chaning
      export PS1='\[\033[01;33m\]\u@\h\[\033[01;31m\] \W$(__git_ps1 " (%s)") \$\[\033[00m\] ' 
      echo -e "\033]50;SetProfile=Default\a" 

      watch -n `expr 1  \* 3` overtime &
      clear
      say '3 seconds till next commit' & # change to default profile 
}


alias git='test_to_reset_clock &; git' # capture the git command and call possible reset clock function

commit_clock()
{
  num_minutes=1
  seconds_per_minute=6
  milli_per_second=1

  total_time=`expr $num_minutes \* $seconds_per_minute \* $milli_per_second`

  test `which watch` && `brew install watch`  # install watch if it doesn't exist already
  watch -n $total_time overtime &
}

test_to_reset_clock()
{
  echo 'Testing --> $1 =? commit'
  say 'Testing --> $1 =? commit'
  
  if [ $1 -e "commit" ]; then 
     regular
  fi
  
}
