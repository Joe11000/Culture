function chrome()
{
  if [ $# -eq 0 ]; then
    /usr/bin/open -a "/Applications/Google Chrome.app" --args &
  else
    while [ $# -gt 0 ]; do
      /usr/bin/open -a "/Applications/Google Chrome.app" $1 &
      shift
    done
  fi
}

# find all processes with "shotgun" in the name and kill them. Start up shotgun
function sg()
{
  killall shotgun
  shotgun
}

# Drop, Create, Migrate, and Seed your Sinatra project
function fuckit()
{
  bundle exec rake db:drop    &&
  bundle exec rake db:create  &&
  bundle exec rake db:migrate &&
  bundle exec rake db:seed    &&
  bundle exec rake db:test:prepare
}

function fuckits()
{
  bundle exec rake db:drop         &&
  bundle exec rake db:create       &&
  bundle exec rake db:migrate      &&
  bundle exec rake db:test:prepare
}

# download and setup basic sinatra skeleton
function sinatra ()
{
  wget "http://cl.ly/2n3D2V0R0L2f/download/sinatra_skeleton.zip"
  unzip sinatra_skeleton.zip -d ./$@
  rm sinatra_skeleton.zip
  cd ./$@
  git init
  git add .
  git commit -am "sinatra skeleton --b"
}

# search all files recursively starting from $2 and search for string $1. Case insensative
function fws()
{
  grep -rEil $1 $2
}

#run web application
function runw()
{
  subl . &
  killall shotgun &
  shotgun config.ru &
  sleep 4s
  chrome http://localhost:9393/ &
}

# hard mm
# clear history of current shell and remove file conatining history of all shells.
function hmm()
{
  history -c
  echo "" > ~/.bash_history
}

function setc()
{
  pwd > /Users/joe.noonan/projects/culture/c
}

function tag()
{
   be rspec --tag $(echo $@ | sed "s/ / --tag /g")
}

function sound()
{
  vol=`osascript -e 'output volume of (get volume settings)'`
  #echo "volume : $vol"
  if [ "$1" == "woo" ]; then
     osascript -e "set Volume 1"
     afplay "/Users/joe.noonan/Desktop/Music/Sounds/Archer_Woo!.mp3"
  elif [ "$1" == "doh" ]; then
     osascript -e "set Volume 1"
     afplay "/Users/joe.noonan/Desktop/Music/Sounds/doh.mp3"
  fi
  vol_back=$(echo "7 * ( $vol / 100 )" | bc -l)
  #echo $vol_back
  osascript -e "set Volume $vol_back"
}

# requires sound()
function tags()
{
  be rspec --tag $(echo $@ | sed "s/ / --tag /g")

  [[ $? = 0 ]] && $(sound "woo" &) || $(sound "doh" &)
}

function tagd()
{
   be rspec --tag $(echo $@ | sed "s/ / --tag /g") -d
}

function tagds()
{
  be rspec --tag $(echo $@ | sed "s/ / --tag /g") -d

  [[ $? = 0 ]] && `sound "woo" &` || `sound "doh" &`
}

function pat()
{
  echo $RSPEC_RERUN_PATTERN
}

function set_pat()
{
  export RSPEC_RERUN_PATTERN="$1"
}

function rr()
{
  be rake rspec-rerun:spec $@
}

function rrs()
{
  be rake rspec-rerun:spec $@

  [[ $? = 0 ]] && $(sound "woo" &) || $(sound "doh" &)
}

function rrd()
{
  be rake rspec-rerun:spec $@ -d
}

function rrts()
{
  RSPEC_RERUN_TAGS_STRING=$@

  be rake rspec-rerun:spec_tags

  [[ $? = 0 ]] && $(sound "woo" &) || $(sound "doh" &)
}

function rrds()
{
  be rake rspec-rerun:spec $@ -d

  [[ $? = 0 ]] && $(sound "woo" &) || $(sound "doh" &)
}

# sublime shortcut
function s()
{
  if [ $# -eq 0 ]; then
    subl . &
  else
    subl $@ &
  fi
}

# requires: chrome
function new_fun()
{
   d=$(date +%u)

   # 0 = sunday ... 6 = saturday
   case $d in
     1) chrome http://watchseries-online.eu/?s=game+of+thrones&search                 # Game Of Thrones
        ;;
     2) chrome http://watchseries.lt/serie/archer                                     # Archer
        ;;
     3) chrome http://www.manymanga.com/N/Naruto/ http://www.narutomanga.org/bleach/  # Bleach + Naruto
        chrome "http://www.cwtv.com/cw-video/supernatural/"                           # Supernatural
        ;;
     4) chrome http://www.narutoget.com/                                              # Naruto
        ;;
     *);;
   esac

   chrome http://kissanime.com/Anime/Kill-la-Kill                                    # Kill La Kill
   chrome http://video.nhl.com/                                                      # Hockey Highlights
   chrome https://www.youtube.com/user/TheYoungTurks

   chrome http://www.mangaeden.com/en-directory/?title=avatar
}

function tags10()
{
  for i in `seq 1 10`; do
    tags $@
  done
}

function tagds10()
{
  for i in `seq 1 10`; do
    tags $@ -d
  done
}


function contest1()
{
  be rake notlb:ui:contest_1
}

function contest2()
{
  be rake notlb:ui:contest_2
}

function info1()
{
  be rake notlb:ui:info_1
}

function info2()
{
  be rake notlb:ui:info_2
}

function vote1()
{
  be rake notlb:ui:vote_1
}

function vote2()
{
  be rake notlb:ui:vote_2
}

function sub1()
{
  be rake notlb:ui:subscription_1
}

function sub2()
{
  be rake notlb:ui:subscription_2
}

function trivia()
{
  be rake notlb:ui:trivia
}

function others()
{
  be rake notlb:ui:others
}

function par()
{
  bundle exec rake notlb:ui:user_participating
}


function sub()
{
  echo '
    ssh interns@elkispljob01.cloud.vibes.com
    sudo -u splat -i
    rails console
    cd current
    ./script/console

    sb_alert_ui = Account.find(8)
    to_end = sb_alert_ui.campaigns.current.by_type(CampaignType.SUBSCRIPTION.id)
    size = to_end.length
    to_end.each { |sc| sc.delete }
    puts "\n\n #{size} entries deleted"
    exit
    exit
    exit
  '
  echo
}

# Return T/F if regex character in $1  needs to be an escaped regex character
function reg()
{
  if [ $1 = '.'  -o $1 = '|'  -o $1 = '('  -o $1 = ')'  -o $1 = '['  -o $1 = ']'  -o $1 = '{'  -o $1 = '}'  -o $1 = '+'  -o $1 = '\'  -o $1 = '^'  -o $1 = '$'  -o $1 = '*'  -o $1 = '?' ]; then
     echo 'yes'
   else
     echo 'no'
  fi
}

function tagps10()
{
  for i in `seq 1 10`; do
    tag $@

    if [ $? -eq 0 ]; then
      #kill $(pgrep -f osascript -e "tell application "AppName" to quit")
      sound woo
      quit preview #  quit comes from https://www.macupdate.com/app/mac/31821/quit
    else
      sound doh
      break
    fi
  done
}

function tte() # Tag Till Error
{
  while [ true ]; do
    tag $@

    if [ $? -eq 0 ]; then
      quit preview #  quit comes from https://www.macupdate.com/app/mac/31821/quit
    else
      break
    fi
  done
}

function ttes() # Tag Till Error
{
  while [ true ]; do
    tag $@

    if [ $? -eq 0 ]; then
      sound woo
      quit preview #  quit comes from https://www.macupdate.com/app/mac/31821/quit
    else
      sound doh
      break
    fi
  done
}

function hd()
{
  heroku run rake db:migrate
  heroku run rake db:seed
}

function dlna()
{
  /Applications/XBMC.app/

}

function nos()
{
   rm -rf "/Users/joe.noonan/projects/saladbar/tmp/screenshots"
}



function r2h()
{
  # create new rails app with postgreSQL database. Skip installation of Test::Unit.
  if [ $# -lt 1 ]; then
    exit 1
  fi

  rails new $1 -T --database=postgresql
  cd $1

  # append necessary gem information to Gemfile
  printf "
  group :development, :test do
    gem 'rspec-rails'
    gem 'factory_girl_rails'
    gem 'shoulda-matchers'
    gem 'better_errors'
    gem 'debugger'
  end

  group :test do
    gem 'faker'
    gem 'capybara'
    gem 'guard-rspec'
    gem 'launchy'
  end

  gem 'bcrypt-ruby', '~> 3.0.0'

  gem 'protected_attributes'
  " >> Gemfile


  # Procfile
  echo "web: bundle exec rails server" > Procfile
  bundle
  bundle update
  rake db:create

  #RSPEC
  rails generate rspec:install

  # tracking files with git
  git init
  git add .
  git commit -m "Initial Commit"

  # open in sublime
  subl .

  #getting repo up to heroku
  heroku login
  heroku create
  git push -u heroku master
  heroku run rake db:create
  heroku run rake db:migrate
  heroku open

   # help -->  https://devcenter.heroku.com/articles/getting-started-with-rails3
}
